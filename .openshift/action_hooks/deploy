#!/usr/bin/env python
# This deploy hook gets executed after dependencies are resolved and the
# build hook has been run but before the application has been started back
# up again.  This script gets executed directly, so it could be python, php,
# ruby, etc.

import os
import ConfigParser

config = ConfigParser.RawConfigParser()

# Create database config.
config.add_section('db')
config.set('db', 'type', os.environ['OPENSHIFT_DB_TYPE'])
config.set('db', 'user', os.environ['OPENSHIFT_DB_USERNAME'])
config.set('db', 'pass', os.environ['OPENSHIFT_DB_PASSWORD'])
config.set('db', 'name', os.environ['OPENSHIFT_APP_NAME'])
config.set('db', 'host', os.environ['OPENSHIFT_DB_HOST'])

# Email default config.
config.add_section('email')
config.set('email', 'smtp_server', 'smtp.gmail.com')
config.set('email', 'smtp_port', '587')
config.set('email', 'smtp_username', 'username@gmail.com')
config.set('email', 'smtp_password', 'password')
config.set('email', 'smtp_starttls', 'True')

# Miscellaneous config.
config.add_section('misc')
config.set('misc', 'base_url', 'http://' + os.environ['OPENSHIFT_GEAR_DNS'])

# Write the configuration file.
with open(os.path.join(os.environ['OPENSHIFT_DATA_DIR'], 'squeeze.cfg'), 'wb') \
        as configfile:
    config.write(configfile)
print """Successfully created configuration file for Squeeze."""

# Create table in mysql database.
user = os.environ['OPENSHIFT_DB_USERNAME']
password = os.environ['OPENSHIFT_DB_PASSWORD']
name = os.environ['OPENSHIFT_APP_NAME']
host = os.environ['OPENSHIFT_DB_HOST']
repo = os.environ['OPENSHIFT_REPO_DIR']

code = """/usr/bin/mysql -u '{0}' --password='{1}' -h '{2}' '{3}' < '{4}/.openshift/action_hooks/squeeze.sql'""".format(user, password, host, name, repo)
os.system(code)
print """Database table populated successfully."""
